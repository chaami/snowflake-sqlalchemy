name: Build and Test

on:
    push:
        branches:
            - main
        tags:
            - v*
    pull_request:
        branches:
            - main
            - prep-**
    workflow_dispatch:
        inputs:
          logLevel:

            default: warning
            description: "Log level"
            required: true
          tags:
            description: "Test scenario tags"
jobs:
  lint:
    name: Check linting
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v2
      - name: Set up Python
        uses: actions/setup-python@v2
        with:
          python-version: '3.7'
      - name: Display Python version
        run: python -c "import sys; import os; print(\"\n\".join(os.environ[\"PATH\"].split(os.pathsep))); print(sys.version); print(sys.executable);"
      - name: Upgrade setuptools, pip and wheel
        run: python -m pip install -U setuptools pip wheel
      - name: Install tox
        run: python -m pip install tox
      - name: Set PY
        run: echo "PY=$(python -VV | sha256sum | cut -d' ' -f1)" >> $GITHUB_ENV
      - uses: actions/cache@v1
        with:
          path: ~/.cache/pre-commit
          key: pre-commit|${{ env.PY }}|${{ hashFiles('.pre-commit-config.yaml') }}
      - name: Run fix_lint
        run: python -m tox -e fix_lint

  test:
   name: Test ${{ matrix.os.download_name }}-${{ matrix.python-version }}-${{ matrix.cloud-provider }}
   needs: lint
   runs-on: ${{ matrix.os.image_name }}
   strategy:
     fail-fast: false
     matrix:
       os:
        - image_name: ubuntu-latest
          download_name: manylinux_x86_64
        - image_name: macos-latest
          download_name: macosx_x86_64
        - image_name: windows-2019
          download_name: win_amd64
       python-version: ["3.7"]
       cloud-provider: [aws, azure, gcp]
   steps:
     - uses: actions/checkout@v2
     - name: Set up Python
       uses: actions/setup-python@v2
       with:
         python-version: ${{ matrix.python-version }}
     - name: Display Python version
       run: python -c "import sys; print(sys.version)"
     - name: Setup parameters file
       shell: bash
       env:
         PARAMETERS_SECRET: ${{ secrets.PARAMETERS_SECRET }}
       run: |
         gpg --quiet --batch --yes --decrypt --passphrase="$PARAMETERS_SECRET" \
         .github/workflows/parameters/public/parameters_${{ matrix.cloud-provider }}.py.gpg > test/parameters.py
